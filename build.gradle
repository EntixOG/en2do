plugins {
    id('java')
    id('maven-publish')
    id('com.github.johnrengelman.shadow') version('7.1.0')
}

group("$projectGroup")
version("$projectVersion")

repositories {
    mavenCentral()
}

dependencies {
    // MongoDB
    implementation("org.mongodb:mongodb-driver-sync:$mongoDriverVersion")
    testImplementation("org.mongodb:mongodb-driver-sync:$mongoDriverVersion")

    // JetBrains annotations
    implementation("org.jetbrains:annotations:$jetbrainsAnnotationsVersion")
    testImplementation("org.jetbrains:annotations:$jetbrainsAnnotationsVersion")

    // Lombok
    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")

    testCompileOnly("org.projectlombok:lombok:$lombokVersion")
    testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")

    // Jupiter test dependencies
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$jupiterVersion")
    testImplementation("org.slf4j:slf4j-simple:$slf4jVersion")
    testImplementation("org.slf4j:jul-to-slf4j:$slf4jVersion")
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(JavaCompile).configureEach {
    options.fork = true
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}
task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

publishing {
    repositories {
        maven {
            url('https://reposilite.koboo.eu/releases')
            credentials {
                username(System.getenv('REPO_USER'))
                password(System.getenv('REPO_TOKEN'))
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId project.getProperties().get("projectGroup")
            artifactId 'en2do'
            version project.getProperties().get("projectVersion")

            from components.java
        }
    }
}

shadowJar {
    relocate('org.jetbrains.annotations', 'eu.koboo.en2do.libs.intellij')
    relocate('intellij.lang.annotations', 'eu.koboo.en2do.libs.jetbrains')
    relocate('org.mongodb', 'eu.koboo.en2do.libs.mongo')
}

project.tasks.shadowJar.finalizedBy(project.tasks.javadocJar)
project.tasks.shadowJar.finalizedBy(project.tasks.sourcesJar)
project.tasks.publish.dependsOn(project.tasks.shadowJar)
